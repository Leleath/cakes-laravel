{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Documentation",
        "description": "L5 Swagger OpenApi description",
        "version": "0.5"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new user",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "Request looks like",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "User1"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "201": {
                        "description": "Successfuly created"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "Request looks like",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "User1"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "200": {
                        "description": "Successfuly login"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "operationId": "logout",
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "200": {
                        "description": "Successfuly login"
                    }
                }
            }
        },
        "/api/items": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Return a list of all items",
                "operationId": "getAllItems",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/items/store": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Create a new item in the list",
                "operationId": "storeNewItem",
                "requestBody": {
                    "description": "Request looks like",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "weight",
                                    "price"
                                ],
                                "properties": {
                                    "title": {},
                                    "description": {},
                                    "weight": {
                                        "type": "integer"
                                    },
                                    "price": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "201": {
                        "description": "Successfuly created"
                    }
                }
            }
        },
        "/api/items/{id}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get an item from the list",
                "operationId": "getItemFromList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Item not found"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/items/update/{id}": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Update an item in the list",
                "operationId": "updateItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request looks like",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "weight",
                                    "price"
                                ],
                                "properties": {
                                    "title": {},
                                    "description": {},
                                    "weight": {
                                        "type": "integer"
                                    },
                                    "price": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Item not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/items/delete/{id}": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Delete an item from the list",
                "operationId": "deleteItemFromList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Item not found"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        }
    },
    "security": [
        []
    ]
}